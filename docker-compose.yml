---
version: '3'

services:
  # We are splitting Nginx and Drupal, see
  # https://blog.dcycle.com/blog/2022-03-25/php-apache-different-containers/
  webserver:
    build:
      context: .
      dockerfile: Dockerfile-nginx-only
    environment:
      # The virtual host is used when we want to access our site via an
      # Nginx Proxy locally; and is required by the script
      # ./scripts/https-deploy.sh.
      # See https://blog.dcycle.com/blog/2018-10-27 for details.
      # See also https://blog.dcycle.com/blog/7f3ea9e1/
      # See also https://blog.dcycle.com/blog/170a6078/
      - VIRTUAL_HOST=${VIRTUAL_HOST}
      - LETSENCRYPT_HOST=${VIRTUAL_HOST}
      - LETSENCRYPT_EMAIL="letsencrypt@${VIRTUAL_HOST}"
    volumes:
      - "./do-not-commit:/do-not-commit:rw"
      - "drupal-files:/var/www/html/sites/default/files:rw"
      - "drupal-themes-contrib:/var/www/html/themes/contrib"
      - "drupal-modules-contrib:/var/www/html/modules/contrib"
    links:
      # This seems to be required as per
      # https://stackoverflow.com/a/48722140/1207752, even though in most
      # cases eschewing this is not a problem. Without this, the
      # webserver container might not see the Drupal container for a
      # split second when everything is being spun up, resulting in a fatal
      # error and the webserver container to exit, and requiring a restart
      # of the container.
      - drupal
    ports:
      - "80"

  # We are splitting Nginx and Drupal, see
  # https://blog.dcycle.com/blog/2022-03-25/php-apache-different-containers/
  drupal:
    build:
      context: .
      dockerfile: Dockerfile-drupal-dev
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - HASH_SALT=${HASH_SALT}
    volumes:
      - "./do-not-commit:/do-not-commit:rw"
      - "drupal-files:/var/www/html/sites/default/files:rw"
      - "drupal-private-files:/drupal-private-files:rw"
      - "./drupal/settings/local-settings:/local-settings"
      - "drupal-themes-contrib:/var/www/html/themes/contrib"
      - "drupal-modules-contrib:/var/www/html/modules/contrib"
    links:
      - mysql:mysql
    working_dir: /var/www/html

  # Database server
  mysql:
    # https://stackoverflow.com/a/72467817
    image: mariadb:10.7
    environment:
      MYSQL_DATABASE: drupal
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_ALLOW_EMPTY_PASSWORD: 'no'
    volumes:
      - "mysql:/var/lib/mysql"

# Specifying the network name makes it predictable on all environments,
# for example when running ./scripts/migrate-all.sh, or when running browser
# tests on a CI environment, or any other tasks which requires external
# docker containers to connect to our network.
# This network (starterkit_drupalsite_default) has been previously created in
# ./scripts/deploy.sh
# See https://github.com/docker/compose/issues/3736.
networks:
  default:
    name: starterkit_drupalsite_default
    external: true

volumes:
  mysql:
  drupal-files:
  # Nginx and Drupal containers need to have the exact same files, otherwise
  # things like css files in contrib modules or themes will not be visible.
  # In order to achieve this we share these via volumes.
  drupal-themes-contrib:
  drupal-modules-contrib:
  drupal-private-files:
